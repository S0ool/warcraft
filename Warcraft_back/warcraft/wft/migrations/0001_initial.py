# Generated by Django 5.1.2 on 2024-11-05 11:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.FileField(upload_to='audio')),
                ('name', models.TextField(blank=True, default='Нет названия')),
                ('category', models.CharField(choices=[('Music', 'Музыка'), ('Replays', 'Реплики персонажей'), ('Ability_Sound', 'Звук способностей')], max_length=100)),
            ],
            options={
                'verbose_name': 'Аудио',
                'verbose_name_plural': 'Аудио',
            },
        ),
        migrations.CreateModel(
            name='CharacterOrBuild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=100)),
                ('race', models.CharField(choices=[('Alliance', 'Альянс'), ('Horde', 'Орда'), ('Undead', 'Нежить'), ('NightElves', 'Ночные эльфы'), ('Naga', 'Наги'), ('NeutralHostile', 'Нейтрально-враждебные'), ('NeutralPassive', 'Нейтрально-пассивные'), ('NonstandardUnits', 'Нестандартные войска')], max_length=100)),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('movement_type', models.CharField(choices=[('None', 'Нет'), ('Pedestrian', 'Пеший'), ('Equestrian', 'Конный'), ('Flying', 'Летающий'), ('Soaring', 'Парящий'), ('Swimming', 'Плывущий'), ('Amphibious', 'Земноводный')], max_length=100)),
                ('type_of_attack', models.CharField(choices=[('None', 'Нет'), ('Normal', 'Обычная'), ('Ranged', 'Дальний бой'), ('Artillery', 'Артиллерия'), ('Spell', 'Заклинание'), ('Dark_Power', 'Сила Тьмы'), ('Magic', 'Магическая'), ('Hero', 'Герой')], max_length=100)),
                ('type_of_defence', models.CharField(choices=[('Normal', 'Обычная'), ('Light', 'Легкая'), ('Medium', 'Средняя'), ('Heavy', 'Тяжелая'), ('Fortified', 'Укрепленная'), ('Hero', 'Герой'), ('Divine', 'Божественная'), ('No_Protection', 'Без защиты')], max_length=100)),
                ('slug', models.SlugField(max_length=255)),
                ('is_build', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name': 'Персонаж или здание',
                'verbose_name_plural': 'Персонажи или здания',
            },
        ),
        migrations.CreateModel(
            name='Cheats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Читы',
                'verbose_name_plural': 'Читы',
            },
        ),
        migrations.CreateModel(
            name='Constants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_attack', models.PositiveIntegerField(blank=True, default=1)),
                ('agi_bonus_def', models.PositiveIntegerField(blank=True, default=0.3)),
                ('int_bonus_mana', models.PositiveIntegerField(blank=True, default=15)),
                ('agi_bonus_attack_speed', models.PositiveIntegerField(blank=True, default=0.02)),
                ('str_bonus_health', models.PositiveIntegerField(blank=True, default=25)),
                ('start_def', models.IntegerField(blank=True, default=-2)),
                ('str_bonus_heal', models.PositiveIntegerField(blank=True, default=0.05)),
                ('int_bonus_mana_regen', models.PositiveIntegerField(blank=True, default=0.05)),
                ('hero_gold_cost', models.PositiveIntegerField(blank=True, default=0.4)),
                ('hero_gold_cost_level', models.PositiveIntegerField(blank=True, default=0.2)),
                ('hero_wood_cost', models.PositiveIntegerField(blank=True, default=0)),
                ('hero_wood_cost_level', models.PositiveIntegerField(blank=True, default=0.2)),
                ('hero_gold_cost_moment', models.PositiveIntegerField(blank=True, default=0.8)),
                ('hero_wood_cost_moment', models.PositiveIntegerField(blank=True, default=0.8)),
                ('hero_health_moment', models.PositiveIntegerField(blank=True, default=0.5)),
                ('hero_time_cost', models.PositiveIntegerField(blank=True, default=65)),
                ('hero_time_cost_max', models.PositiveIntegerField(blank=True, default=200)),
                ('bonus_heal_in_austral', models.PositiveIntegerField(blank=True, default=1.66)),
                ('refund_rate', models.PositiveIntegerField(blank=True, default=0.75)),
                ('attack_speed_in_cold', models.PositiveIntegerField(blank=True, default=-0.25)),
                ('move_speed_in_cold', models.PositiveIntegerField(blank=True, default=-0.5)),
                ('day_time', models.PositiveIntegerField(blank=True, default=480)),
                ('chance_to_miss', models.PositiveIntegerField(blank=True, default=0.25)),
            ],
            options={
                'verbose_name': 'Константы',
                'verbose_name_plural': 'Константы',
            },
        ),
        migrations.CreateModel(
            name='StarterSkill',
            fields=[
                ('data', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('passive', 'Пассивный'), ('active', 'Активный')], max_length=255)),
                ('autocast', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=255)),
                ('hotkey', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('image', models.ImageField(upload_to='images')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='Targets',
            fields=[
                ('name_ru', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name_en', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Цель',
                'verbose_name_plural': 'Цели',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='videos')),
                ('category', models.CharField(choices=[('game_video', 'Игровое видео'), ('game_process', 'Игровой процесс')], max_length=100)),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
            },
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('characterorbuild_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wft.characterorbuild')),
                ('level', models.PositiveIntegerField(blank=True, default=10)),
                ('hero_data', models.JSONField(blank=True, default=dict)),
                ('primary_attribute', models.CharField(choices=[('strength', 'Сила'), ('agility', 'Ловкость'), ('intelligence', 'Разум')], max_length=100)),
            ],
            options={
                'verbose_name': 'Герой',
                'verbose_name_plural': 'Герои',
            },
            bases=('wft.characterorbuild',),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('starterskill_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wft.starterskill')),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('classification', models.CharField(choices=[('permanent', 'Постоянные'), ('with_charges', 'Имеющие заряды'), ('enhancing', 'Усиливающие'), ('artifact', 'Артефакты'), ('sellable', 'Подлежащие продаже'), ('campaign_only', 'Только для кампании'), ('miscellaneous', 'Разные')], max_length=255)),
            ],
            bases=('wft.starterskill',),
        ),
        migrations.AddField(
            model_name='starterskill',
            name='image',
            field=models.ManyToManyField(related_name='skills', to='wft.image'),
        ),
        migrations.AddField(
            model_name='characterorbuild',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='wft.image'),
        ),
        migrations.AddField(
            model_name='starterskill',
            name='target',
            field=models.ManyToManyField(blank=True, related_name='skills', to='wft.targets'),
        ),
        migrations.AddField(
            model_name='characterorbuild',
            name='attack_targets',
            field=models.ManyToManyField(blank=True, to='wft.targets'),
        ),
        migrations.CreateModel(
            name='Upgrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', models.JSONField(blank=True, default=dict)),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('levels', models.PositiveIntegerField(blank=True, default=1)),
                ('effects', models.JSONField(blank=True, default=dict)),
                ('wood_cost', models.PositiveIntegerField(default=0)),
                ('gold_cost', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(max_length=255)),
                ('hotkey', models.CharField(max_length=1)),
                ('character', models.ManyToManyField(blank=True, related_name='upgrades', to='wft.characterorbuild')),
                ('image', models.ManyToManyField(related_name='upgrades', to='wft.image')),
            ],
            options={
                'verbose_name': 'Улучшение',
                'verbose_name_plural': 'Улучшения',
            },
        ),
        migrations.AddField(
            model_name='starterskill',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='wft.video'),
        ),
        migrations.CreateModel(
            name='Maps',
            fields=[
                ('campaign_title', models.CharField(max_length=255)),
                ('campaign_subtitle', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='maps')),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('slug', models.SlugField(max_length=255)),
                ('images', models.ManyToManyField(blank=True, related_name='maps', to='wft.image')),
                ('videos', models.ManyToManyField(blank=True, related_name='maps', to='wft.video')),
            ],
            options={
                'verbose_name': 'Карта',
                'verbose_name_plural': 'Карты',
            },
        ),
        migrations.CreateModel(
            name='Locate',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('slug', models.SlugField(max_length=255)),
                ('images', models.ManyToManyField(blank=True, related_name='locates', to='wft.image')),
                ('main_locate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_locates', to='wft.locate')),
                ('videos', models.ManyToManyField(blank=True, related_name='locates', to='wft.video')),
            ],
            options={
                'verbose_name': 'Локация',
                'verbose_name_plural': 'Локации',
            },
        ),
        migrations.CreateModel(
            name='FinisherSkill',
            fields=[
                ('starterskill_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wft.starterskill')),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wft.audio')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wft.characterorbuild')),
            ],
            bases=('wft.starterskill',),
        ),
        migrations.CreateModel(
            name='HeroSkill',
            fields=[
                ('finisherskill_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wft.finisherskill')),
                ('levels', models.PositiveIntegerField(blank=True, default=1)),
                ('needed_level', models.PositiveIntegerField(blank=True, default=1)),
                ('needed_next_level', models.PositiveIntegerField(blank=True, default=2)),
                ('description', models.JSONField(blank=True, default=dict)),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wft.hero')),
            ],
            options={
                'verbose_name': 'Навык героя',
                'verbose_name_plural': 'Навыки героя',
            },
            bases=('wft.finisherskill',),
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('finisherskill_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wft.finisherskill')),
                ('description', models.TextField(blank=True, default='Нет описания')),
                ('needed_upgrades', models.ManyToManyField(blank=True, related_name='skills', to='wft.upgrade')),
            ],
            options={
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
            bases=('wft.finisherskill',),
        ),
    ]
